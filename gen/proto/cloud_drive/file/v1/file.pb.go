// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        (unknown)
// source: proto/cloud_drive/file/v1/file.proto

package v1

import (
	v1 "github.com/EdgeStanding/cloud-drive-proto/gen/proto/cloud_drive/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FileChunksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Auth          *v1.AuthInfo           `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"` // 认证信息
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileChunksRequest) Reset() {
	*x = FileChunksRequest{}
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileChunksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileChunksRequest) ProtoMessage() {}

func (x *FileChunksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileChunksRequest.ProtoReflect.Descriptor instead.
func (*FileChunksRequest) Descriptor() ([]byte, []int) {
	return file_proto_cloud_drive_file_v1_file_proto_rawDescGZIP(), []int{0}
}

func (x *FileChunksRequest) GetAuth() *v1.AuthInfo {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *FileChunksRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type FileChunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Size          int64                  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Order         int64                  `protobuf:"varint,3,opt,name=order,proto3" json:"order,omitempty"`
	Hash          string                 `protobuf:"bytes,4,opt,name=hash,proto3" json:"hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileChunk) Reset() {
	*x = FileChunk{}
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileChunk) ProtoMessage() {}

func (x *FileChunk) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileChunk.ProtoReflect.Descriptor instead.
func (*FileChunk) Descriptor() ([]byte, []int) {
	return file_proto_cloud_drive_file_v1_file_proto_rawDescGZIP(), []int{1}
}

func (x *FileChunk) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FileChunk) GetOrder() int64 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *FileChunk) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type FileChunksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chunks        []*FileChunk           `protobuf:"bytes,1,rep,name=chunks,proto3" json:"chunks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileChunksResponse) Reset() {
	*x = FileChunksResponse{}
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileChunksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileChunksResponse) ProtoMessage() {}

func (x *FileChunksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileChunksResponse.ProtoReflect.Descriptor instead.
func (*FileChunksResponse) Descriptor() ([]byte, []int) {
	return file_proto_cloud_drive_file_v1_file_proto_rawDescGZIP(), []int{2}
}

func (x *FileChunksResponse) GetChunks() []*FileChunk {
	if x != nil {
		return x.Chunks
	}
	return nil
}

type FileChunkDownloadLinkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Auth          *v1.AuthInfo           `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"` // 认证信息
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Order         int64                  `protobuf:"varint,3,opt,name=order,proto3" json:"order,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileChunkDownloadLinkRequest) Reset() {
	*x = FileChunkDownloadLinkRequest{}
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileChunkDownloadLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileChunkDownloadLinkRequest) ProtoMessage() {}

func (x *FileChunkDownloadLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileChunkDownloadLinkRequest.ProtoReflect.Descriptor instead.
func (*FileChunkDownloadLinkRequest) Descriptor() ([]byte, []int) {
	return file_proto_cloud_drive_file_v1_file_proto_rawDescGZIP(), []int{3}
}

func (x *FileChunkDownloadLinkRequest) GetAuth() *v1.AuthInfo {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *FileChunkDownloadLinkRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FileChunkDownloadLinkRequest) GetOrder() int64 {
	if x != nil {
		return x.Order
	}
	return 0
}

type FileChunkDownloadLinkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Order         int64                  `protobuf:"varint,1,opt,name=order,proto3" json:"order,omitempty"`
	Size          uint64                 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Hash          string                 `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	Url           string                 `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileChunkDownloadLinkResponse) Reset() {
	*x = FileChunkDownloadLinkResponse{}
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileChunkDownloadLinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileChunkDownloadLinkResponse) ProtoMessage() {}

func (x *FileChunkDownloadLinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileChunkDownloadLinkResponse.ProtoReflect.Descriptor instead.
func (*FileChunkDownloadLinkResponse) Descriptor() ([]byte, []int) {
	return file_proto_cloud_drive_file_v1_file_proto_rawDescGZIP(), []int{4}
}

func (x *FileChunkDownloadLinkResponse) GetOrder() int64 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *FileChunkDownloadLinkResponse) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FileChunkDownloadLinkResponse) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *FileChunkDownloadLinkResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// File 文件信息
type File struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Path          string                 `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Type          string                 `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Size          int64                  `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	MimeType      string                 `protobuf:"bytes,6,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt     *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *File) Reset() {
	*x = File{}
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_proto_cloud_drive_file_v1_file_proto_rawDescGZIP(), []int{5}
}

func (x *File) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *File) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *File) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *File) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *File) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *File) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *File) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *File) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *File) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

// ChunkInfo 分块信息
type ChunkInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Order         int32                  `protobuf:"varint,1,opt,name=order,proto3" json:"order,omitempty"`
	Hash          string                 `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	Size          int64                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChunkInfo) Reset() {
	*x = ChunkInfo{}
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChunkInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChunkInfo) ProtoMessage() {}

func (x *ChunkInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChunkInfo.ProtoReflect.Descriptor instead.
func (*ChunkInfo) Descriptor() ([]byte, []int) {
	return file_proto_cloud_drive_file_v1_file_proto_rawDescGZIP(), []int{6}
}

func (x *ChunkInfo) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *ChunkInfo) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *ChunkInfo) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

// CreateDirectoryRequest 创建目录请求
type CreateDirectoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Auth          *v1.AuthInfo           `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"` // 认证信息
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDirectoryRequest) Reset() {
	*x = CreateDirectoryRequest{}
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDirectoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDirectoryRequest) ProtoMessage() {}

func (x *CreateDirectoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDirectoryRequest.ProtoReflect.Descriptor instead.
func (*CreateDirectoryRequest) Descriptor() ([]byte, []int) {
	return file_proto_cloud_drive_file_v1_file_proto_rawDescGZIP(), []int{7}
}

func (x *CreateDirectoryRequest) GetAuth() *v1.AuthInfo {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *CreateDirectoryRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

// CreateDirectoryResponse 创建目录响应
type CreateDirectoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	File          *File                  `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDirectoryResponse) Reset() {
	*x = CreateDirectoryResponse{}
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDirectoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDirectoryResponse) ProtoMessage() {}

func (x *CreateDirectoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDirectoryResponse.ProtoReflect.Descriptor instead.
func (*CreateDirectoryResponse) Descriptor() ([]byte, []int) {
	return file_proto_cloud_drive_file_v1_file_proto_rawDescGZIP(), []int{8}
}

func (x *CreateDirectoryResponse) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

// ListFilesRequest 列出目录下的文件请求
type ListFilesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Auth          *v1.AuthInfo           `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"` // 认证信息
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListFilesRequest) Reset() {
	*x = ListFilesRequest{}
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFilesRequest) ProtoMessage() {}

func (x *ListFilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFilesRequest.ProtoReflect.Descriptor instead.
func (*ListFilesRequest) Descriptor() ([]byte, []int) {
	return file_proto_cloud_drive_file_v1_file_proto_rawDescGZIP(), []int{9}
}

func (x *ListFilesRequest) GetAuth() *v1.AuthInfo {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *ListFilesRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

// ListFilesResponse 列出目录下的文件响应
type ListFilesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Files         []*File                `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListFilesResponse) Reset() {
	*x = ListFilesResponse{}
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFilesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFilesResponse) ProtoMessage() {}

func (x *ListFilesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFilesResponse.ProtoReflect.Descriptor instead.
func (*ListFilesResponse) Descriptor() ([]byte, []int) {
	return file_proto_cloud_drive_file_v1_file_proto_rawDescGZIP(), []int{10}
}

func (x *ListFilesResponse) GetFiles() []*File {
	if x != nil {
		return x.Files
	}
	return nil
}

// DeleteFileRequest 删除文件请求
type DeleteFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Auth          *v1.AuthInfo           `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"` // 认证信息
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFileRequest) Reset() {
	*x = DeleteFileRequest{}
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFileRequest) ProtoMessage() {}

func (x *DeleteFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFileRequest.ProtoReflect.Descriptor instead.
func (*DeleteFileRequest) Descriptor() ([]byte, []int) {
	return file_proto_cloud_drive_file_v1_file_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteFileRequest) GetAuth() *v1.AuthInfo {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *DeleteFileRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

// DeleteFileResponse 删除文件响应
type DeleteFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFileResponse) Reset() {
	*x = DeleteFileResponse{}
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFileResponse) ProtoMessage() {}

func (x *DeleteFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFileResponse.ProtoReflect.Descriptor instead.
func (*DeleteFileResponse) Descriptor() ([]byte, []int) {
	return file_proto_cloud_drive_file_v1_file_proto_rawDescGZIP(), []int{12}
}

// ListDeletedFilesRequest 列出已删除的文件请求
type ListDeletedFilesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Auth          *v1.AuthInfo           `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"` // 认证信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDeletedFilesRequest) Reset() {
	*x = ListDeletedFilesRequest{}
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDeletedFilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDeletedFilesRequest) ProtoMessage() {}

func (x *ListDeletedFilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDeletedFilesRequest.ProtoReflect.Descriptor instead.
func (*ListDeletedFilesRequest) Descriptor() ([]byte, []int) {
	return file_proto_cloud_drive_file_v1_file_proto_rawDescGZIP(), []int{13}
}

func (x *ListDeletedFilesRequest) GetAuth() *v1.AuthInfo {
	if x != nil {
		return x.Auth
	}
	return nil
}

// ListDeletedFilesResponse 列出已删除的文件响应
type ListDeletedFilesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Files         []*File                `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDeletedFilesResponse) Reset() {
	*x = ListDeletedFilesResponse{}
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDeletedFilesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDeletedFilesResponse) ProtoMessage() {}

func (x *ListDeletedFilesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDeletedFilesResponse.ProtoReflect.Descriptor instead.
func (*ListDeletedFilesResponse) Descriptor() ([]byte, []int) {
	return file_proto_cloud_drive_file_v1_file_proto_rawDescGZIP(), []int{14}
}

func (x *ListDeletedFilesResponse) GetFiles() []*File {
	if x != nil {
		return x.Files
	}
	return nil
}

// RestoreFileRequest 恢复已删除的文件请求
type RestoreFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Auth          *v1.AuthInfo           `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"` // 认证信息
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestoreFileRequest) Reset() {
	*x = RestoreFileRequest{}
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestoreFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreFileRequest) ProtoMessage() {}

func (x *RestoreFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreFileRequest.ProtoReflect.Descriptor instead.
func (*RestoreFileRequest) Descriptor() ([]byte, []int) {
	return file_proto_cloud_drive_file_v1_file_proto_rawDescGZIP(), []int{15}
}

func (x *RestoreFileRequest) GetAuth() *v1.AuthInfo {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *RestoreFileRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

// RestoreFileResponse 恢复已删除的文件响应
type RestoreFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestoreFileResponse) Reset() {
	*x = RestoreFileResponse{}
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestoreFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreFileResponse) ProtoMessage() {}

func (x *RestoreFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreFileResponse.ProtoReflect.Descriptor instead.
func (*RestoreFileResponse) Descriptor() ([]byte, []int) {
	return file_proto_cloud_drive_file_v1_file_proto_rawDescGZIP(), []int{16}
}

// PermanentlyDeleteFileRequest 永久删除文件请求
type PermanentlyDeleteFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Auth          *v1.AuthInfo           `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"` // 认证信息
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PermanentlyDeleteFileRequest) Reset() {
	*x = PermanentlyDeleteFileRequest{}
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PermanentlyDeleteFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermanentlyDeleteFileRequest) ProtoMessage() {}

func (x *PermanentlyDeleteFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermanentlyDeleteFileRequest.ProtoReflect.Descriptor instead.
func (*PermanentlyDeleteFileRequest) Descriptor() ([]byte, []int) {
	return file_proto_cloud_drive_file_v1_file_proto_rawDescGZIP(), []int{17}
}

func (x *PermanentlyDeleteFileRequest) GetAuth() *v1.AuthInfo {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *PermanentlyDeleteFileRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

// PermanentlyDeleteFileResponse 永久删除文件响应
type PermanentlyDeleteFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PermanentlyDeleteFileResponse) Reset() {
	*x = PermanentlyDeleteFileResponse{}
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PermanentlyDeleteFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermanentlyDeleteFileResponse) ProtoMessage() {}

func (x *PermanentlyDeleteFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermanentlyDeleteFileResponse.ProtoReflect.Descriptor instead.
func (*PermanentlyDeleteFileResponse) Descriptor() ([]byte, []int) {
	return file_proto_cloud_drive_file_v1_file_proto_rawDescGZIP(), []int{18}
}

// InitUploadRequest 初始化文件上传请求
type InitUploadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Auth          *v1.AuthInfo           `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`                         // 认证信息
	SavePath      string                 `protobuf:"bytes,2,opt,name=save_path,json=savePath,proto3" json:"save_path,omitempty"` // 文件保存路径
	Size          int64                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`                        // 文件大小
	Override      bool                   `protobuf:"varint,4,opt,name=override,proto3" json:"override,omitempty"`                // 是否覆盖已存在的文件
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitUploadRequest) Reset() {
	*x = InitUploadRequest{}
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitUploadRequest) ProtoMessage() {}

func (x *InitUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitUploadRequest.ProtoReflect.Descriptor instead.
func (*InitUploadRequest) Descriptor() ([]byte, []int) {
	return file_proto_cloud_drive_file_v1_file_proto_rawDescGZIP(), []int{19}
}

func (x *InitUploadRequest) GetAuth() *v1.AuthInfo {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *InitUploadRequest) GetSavePath() string {
	if x != nil {
		return x.SavePath
	}
	return ""
}

func (x *InitUploadRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *InitUploadRequest) GetOverride() bool {
	if x != nil {
		return x.Override
	}
	return false
}

// InitUploadResponse 初始化文件上传响应
type InitUploadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	File          *File                  `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`                                // 文件信息
	ChunkSize     int32                  `protobuf:"varint,2,opt,name=chunk_size,json=chunkSize,proto3" json:"chunk_size,omitempty"`    // 分块大小
	ChunkCount    int32                  `protobuf:"varint,3,opt,name=chunk_count,json=chunkCount,proto3" json:"chunk_count,omitempty"` // 分块数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitUploadResponse) Reset() {
	*x = InitUploadResponse{}
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitUploadResponse) ProtoMessage() {}

func (x *InitUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitUploadResponse.ProtoReflect.Descriptor instead.
func (*InitUploadResponse) Descriptor() ([]byte, []int) {
	return file_proto_cloud_drive_file_v1_file_proto_rawDescGZIP(), []int{20}
}

func (x *InitUploadResponse) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *InitUploadResponse) GetChunkSize() int32 {
	if x != nil {
		return x.ChunkSize
	}
	return 0
}

func (x *InitUploadResponse) GetChunkCount() int32 {
	if x != nil {
		return x.ChunkCount
	}
	return 0
}

// MoveFileRequest 移动文件请求
type MoveFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Auth          *v1.AuthInfo           `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`                               // 认证信息
	SourcePath    string                 `protobuf:"bytes,2,opt,name=source_path,json=sourcePath,proto3" json:"source_path,omitempty"` // 源文件路径
	TargetPath    string                 `protobuf:"bytes,3,opt,name=target_path,json=targetPath,proto3" json:"target_path,omitempty"` // 目标文件路径
	Override      bool                   `protobuf:"varint,4,opt,name=override,proto3" json:"override,omitempty"`                      // 是否覆盖已存在的文件
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MoveFileRequest) Reset() {
	*x = MoveFileRequest{}
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveFileRequest) ProtoMessage() {}

func (x *MoveFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveFileRequest.ProtoReflect.Descriptor instead.
func (*MoveFileRequest) Descriptor() ([]byte, []int) {
	return file_proto_cloud_drive_file_v1_file_proto_rawDescGZIP(), []int{21}
}

func (x *MoveFileRequest) GetAuth() *v1.AuthInfo {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *MoveFileRequest) GetSourcePath() string {
	if x != nil {
		return x.SourcePath
	}
	return ""
}

func (x *MoveFileRequest) GetTargetPath() string {
	if x != nil {
		return x.TargetPath
	}
	return ""
}

func (x *MoveFileRequest) GetOverride() bool {
	if x != nil {
		return x.Override
	}
	return false
}

// MoveFileResponse 移动文件响应
type MoveFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	File          *File                  `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"` // 移动后的文件信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MoveFileResponse) Reset() {
	*x = MoveFileResponse{}
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveFileResponse) ProtoMessage() {}

func (x *MoveFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveFileResponse.ProtoReflect.Descriptor instead.
func (*MoveFileResponse) Descriptor() ([]byte, []int) {
	return file_proto_cloud_drive_file_v1_file_proto_rawDescGZIP(), []int{22}
}

func (x *MoveFileResponse) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

// CopyFileRequest 复制文件请求
type CopyFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Auth          *v1.AuthInfo           `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`                               // 认证信息
	SourcePath    string                 `protobuf:"bytes,2,opt,name=source_path,json=sourcePath,proto3" json:"source_path,omitempty"` // 源文件路径
	TargetPath    string                 `protobuf:"bytes,3,opt,name=target_path,json=targetPath,proto3" json:"target_path,omitempty"` // 目标文件路径
	Override      bool                   `protobuf:"varint,4,opt,name=override,proto3" json:"override,omitempty"`                      // 是否覆盖已存在的文件
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CopyFileRequest) Reset() {
	*x = CopyFileRequest{}
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CopyFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyFileRequest) ProtoMessage() {}

func (x *CopyFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyFileRequest.ProtoReflect.Descriptor instead.
func (*CopyFileRequest) Descriptor() ([]byte, []int) {
	return file_proto_cloud_drive_file_v1_file_proto_rawDescGZIP(), []int{23}
}

func (x *CopyFileRequest) GetAuth() *v1.AuthInfo {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *CopyFileRequest) GetSourcePath() string {
	if x != nil {
		return x.SourcePath
	}
	return ""
}

func (x *CopyFileRequest) GetTargetPath() string {
	if x != nil {
		return x.TargetPath
	}
	return ""
}

func (x *CopyFileRequest) GetOverride() bool {
	if x != nil {
		return x.Override
	}
	return false
}

// CopyFileResponse 复制文件响应
type CopyFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	File          *File                  `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"` // 复制后的文件信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CopyFileResponse) Reset() {
	*x = CopyFileResponse{}
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CopyFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyFileResponse) ProtoMessage() {}

func (x *CopyFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyFileResponse.ProtoReflect.Descriptor instead.
func (*CopyFileResponse) Descriptor() ([]byte, []int) {
	return file_proto_cloud_drive_file_v1_file_proto_rawDescGZIP(), []int{24}
}

func (x *CopyFileResponse) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

// RenameFileRequest 重命名文件请求
type RenameFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Auth          *v1.AuthInfo           `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`                      // 认证信息
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`                      // 文件路径
	NewName       string                 `protobuf:"bytes,3,opt,name=new_name,json=newName,proto3" json:"new_name,omitempty"` // 新文件名
	Override      bool                   `protobuf:"varint,4,opt,name=override,proto3" json:"override,omitempty"`             // 是否覆盖已存在的文件
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RenameFileRequest) Reset() {
	*x = RenameFileRequest{}
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RenameFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameFileRequest) ProtoMessage() {}

func (x *RenameFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenameFileRequest.ProtoReflect.Descriptor instead.
func (*RenameFileRequest) Descriptor() ([]byte, []int) {
	return file_proto_cloud_drive_file_v1_file_proto_rawDescGZIP(), []int{25}
}

func (x *RenameFileRequest) GetAuth() *v1.AuthInfo {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *RenameFileRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *RenameFileRequest) GetNewName() string {
	if x != nil {
		return x.NewName
	}
	return ""
}

func (x *RenameFileRequest) GetOverride() bool {
	if x != nil {
		return x.Override
	}
	return false
}

// RenameFileResponse 重命名文件响应
type RenameFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	File          *File                  `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"` // 重命名后的文件信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RenameFileResponse) Reset() {
	*x = RenameFileResponse{}
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RenameFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameFileResponse) ProtoMessage() {}

func (x *RenameFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenameFileResponse.ProtoReflect.Descriptor instead.
func (*RenameFileResponse) Descriptor() ([]byte, []int) {
	return file_proto_cloud_drive_file_v1_file_proto_rawDescGZIP(), []int{26}
}

func (x *RenameFileResponse) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

// 列出回收站请求
type ListRecycleBinRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Auth          *v1.AuthInfo           `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"` // 认证信息
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	SortBy        string                 `protobuf:"bytes,4,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	SortOrder     string                 `protobuf:"bytes,5,opt,name=sort_order,json=sortOrder,proto3" json:"sort_order,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRecycleBinRequest) Reset() {
	*x = ListRecycleBinRequest{}
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRecycleBinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRecycleBinRequest) ProtoMessage() {}

func (x *ListRecycleBinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRecycleBinRequest.ProtoReflect.Descriptor instead.
func (*ListRecycleBinRequest) Descriptor() ([]byte, []int) {
	return file_proto_cloud_drive_file_v1_file_proto_rawDescGZIP(), []int{27}
}

func (x *ListRecycleBinRequest) GetAuth() *v1.AuthInfo {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *ListRecycleBinRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListRecycleBinRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListRecycleBinRequest) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListRecycleBinRequest) GetSortOrder() string {
	if x != nil {
		return x.SortOrder
	}
	return ""
}

// 列出回收站响应
type ListRecycleBinResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 回收站中的文件列表
	Items []*RecycleBinItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	// 总数
	Total         int32 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRecycleBinResponse) Reset() {
	*x = ListRecycleBinResponse{}
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRecycleBinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRecycleBinResponse) ProtoMessage() {}

func (x *ListRecycleBinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRecycleBinResponse.ProtoReflect.Descriptor instead.
func (*ListRecycleBinResponse) Descriptor() ([]byte, []int) {
	return file_proto_cloud_drive_file_v1_file_proto_rawDescGZIP(), []int{28}
}

func (x *ListRecycleBinResponse) GetItems() []*RecycleBinItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListRecycleBinResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// 回收站项目信息
type RecycleBinItem struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 文件ID
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 文件名
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 原始路径
	OriginalPath string `protobuf:"bytes,3,opt,name=original_path,json=originalPath,proto3" json:"original_path,omitempty"`
	// 是否是目录
	Type string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// 文件大小
	Size int64 `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	// MIME类型
	MimeType string `protobuf:"bytes,6,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	// 删除时间
	DeletedAt int64 `protobuf:"varint,7,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	// 过期时间
	ExpireAt      int64 `protobuf:"varint,8,opt,name=expire_at,json=expireAt,proto3" json:"expire_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecycleBinItem) Reset() {
	*x = RecycleBinItem{}
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecycleBinItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecycleBinItem) ProtoMessage() {}

func (x *RecycleBinItem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecycleBinItem.ProtoReflect.Descriptor instead.
func (*RecycleBinItem) Descriptor() ([]byte, []int) {
	return file_proto_cloud_drive_file_v1_file_proto_rawDescGZIP(), []int{29}
}

func (x *RecycleBinItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RecycleBinItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RecycleBinItem) GetOriginalPath() string {
	if x != nil {
		return x.OriginalPath
	}
	return ""
}

func (x *RecycleBinItem) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *RecycleBinItem) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *RecycleBinItem) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *RecycleBinItem) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *RecycleBinItem) GetExpireAt() int64 {
	if x != nil {
		return x.ExpireAt
	}
	return 0
}

// 从回收站恢复文件请求
type RestoreFromRecycleBinRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Auth          *v1.AuthInfo           `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"` // 认证信息
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Override      bool                   `protobuf:"varint,3,opt,name=override,proto3" json:"override,omitempty"`
	TargetPath    string                 `protobuf:"bytes,4,opt,name=target_path,json=targetPath,proto3" json:"target_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestoreFromRecycleBinRequest) Reset() {
	*x = RestoreFromRecycleBinRequest{}
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestoreFromRecycleBinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreFromRecycleBinRequest) ProtoMessage() {}

func (x *RestoreFromRecycleBinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreFromRecycleBinRequest.ProtoReflect.Descriptor instead.
func (*RestoreFromRecycleBinRequest) Descriptor() ([]byte, []int) {
	return file_proto_cloud_drive_file_v1_file_proto_rawDescGZIP(), []int{30}
}

func (x *RestoreFromRecycleBinRequest) GetAuth() *v1.AuthInfo {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *RestoreFromRecycleBinRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *RestoreFromRecycleBinRequest) GetOverride() bool {
	if x != nil {
		return x.Override
	}
	return false
}

func (x *RestoreFromRecycleBinRequest) GetTargetPath() string {
	if x != nil {
		return x.TargetPath
	}
	return ""
}

// 从回收站恢复文件响应
type RestoreFromRecycleBinResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 恢复的文件信息
	File          *File `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestoreFromRecycleBinResponse) Reset() {
	*x = RestoreFromRecycleBinResponse{}
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestoreFromRecycleBinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreFromRecycleBinResponse) ProtoMessage() {}

func (x *RestoreFromRecycleBinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreFromRecycleBinResponse.ProtoReflect.Descriptor instead.
func (*RestoreFromRecycleBinResponse) Descriptor() ([]byte, []int) {
	return file_proto_cloud_drive_file_v1_file_proto_rawDescGZIP(), []int{31}
}

func (x *RestoreFromRecycleBinResponse) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

// 从回收站删除文件请求
type DeleteFromRecycleBinRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Auth          *v1.AuthInfo           `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"` // 认证信息
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFromRecycleBinRequest) Reset() {
	*x = DeleteFromRecycleBinRequest{}
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFromRecycleBinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFromRecycleBinRequest) ProtoMessage() {}

func (x *DeleteFromRecycleBinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFromRecycleBinRequest.ProtoReflect.Descriptor instead.
func (*DeleteFromRecycleBinRequest) Descriptor() ([]byte, []int) {
	return file_proto_cloud_drive_file_v1_file_proto_rawDescGZIP(), []int{32}
}

func (x *DeleteFromRecycleBinRequest) GetAuth() *v1.AuthInfo {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *DeleteFromRecycleBinRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

// 从回收站删除文件响应
type DeleteFromRecycleBinResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFromRecycleBinResponse) Reset() {
	*x = DeleteFromRecycleBinResponse{}
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFromRecycleBinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFromRecycleBinResponse) ProtoMessage() {}

func (x *DeleteFromRecycleBinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFromRecycleBinResponse.ProtoReflect.Descriptor instead.
func (*DeleteFromRecycleBinResponse) Descriptor() ([]byte, []int) {
	return file_proto_cloud_drive_file_v1_file_proto_rawDescGZIP(), []int{33}
}

// 清空回收站请求
type EmptyRecycleBinRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Auth          *v1.AuthInfo           `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"` // 认证信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmptyRecycleBinRequest) Reset() {
	*x = EmptyRecycleBinRequest{}
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmptyRecycleBinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyRecycleBinRequest) ProtoMessage() {}

func (x *EmptyRecycleBinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyRecycleBinRequest.ProtoReflect.Descriptor instead.
func (*EmptyRecycleBinRequest) Descriptor() ([]byte, []int) {
	return file_proto_cloud_drive_file_v1_file_proto_rawDescGZIP(), []int{34}
}

func (x *EmptyRecycleBinRequest) GetAuth() *v1.AuthInfo {
	if x != nil {
		return x.Auth
	}
	return nil
}

// 清空回收站响应
type EmptyRecycleBinResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 清空的文件数量
	DeletedCount  int32 `protobuf:"varint,1,opt,name=deleted_count,json=deletedCount,proto3" json:"deleted_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmptyRecycleBinResponse) Reset() {
	*x = EmptyRecycleBinResponse{}
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmptyRecycleBinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyRecycleBinResponse) ProtoMessage() {}

func (x *EmptyRecycleBinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyRecycleBinResponse.ProtoReflect.Descriptor instead.
func (*EmptyRecycleBinResponse) Descriptor() ([]byte, []int) {
	return file_proto_cloud_drive_file_v1_file_proto_rawDescGZIP(), []int{35}
}

func (x *EmptyRecycleBinResponse) GetDeletedCount() int32 {
	if x != nil {
		return x.DeletedCount
	}
	return 0
}

type CreateFileRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Auth  *v1.AuthInfo           `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"` // 认证信息
	//  文件名称和路径
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	//  文件大小
	Size int64 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	// 分块哈希
	Hashes        []*v1.OrderedHash `protobuf:"bytes,4,rep,name=hashes,proto3" json:"hashes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateFileRequest) Reset() {
	*x = CreateFileRequest{}
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFileRequest) ProtoMessage() {}

func (x *CreateFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFileRequest.ProtoReflect.Descriptor instead.
func (*CreateFileRequest) Descriptor() ([]byte, []int) {
	return file_proto_cloud_drive_file_v1_file_proto_rawDescGZIP(), []int{36}
}

func (x *CreateFileRequest) GetAuth() *v1.AuthInfo {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *CreateFileRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CreateFileRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *CreateFileRequest) GetHashes() []*v1.OrderedHash {
	if x != nil {
		return x.Hashes
	}
	return nil
}

type CreateFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	File          *File                  `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateFileResponse) Reset() {
	*x = CreateFileResponse{}
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFileResponse) ProtoMessage() {}

func (x *CreateFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFileResponse.ProtoReflect.Descriptor instead.
func (*CreateFileResponse) Descriptor() ([]byte, []int) {
	return file_proto_cloud_drive_file_v1_file_proto_rawDescGZIP(), []int{37}
}

func (x *CreateFileResponse) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

type GetFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Auth          *v1.AuthInfo           `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"` // 认证信息
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFileRequest) Reset() {
	*x = GetFileRequest{}
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileRequest) ProtoMessage() {}

func (x *GetFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileRequest.ProtoReflect.Descriptor instead.
func (*GetFileRequest) Descriptor() ([]byte, []int) {
	return file_proto_cloud_drive_file_v1_file_proto_rawDescGZIP(), []int{38}
}

func (x *GetFileRequest) GetAuth() *v1.AuthInfo {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *GetFileRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type GetFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	File          *File                  `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFileResponse) Reset() {
	*x = GetFileResponse{}
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileResponse) ProtoMessage() {}

func (x *GetFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileResponse.ProtoReflect.Descriptor instead.
func (*GetFileResponse) Descriptor() ([]byte, []int) {
	return file_proto_cloud_drive_file_v1_file_proto_rawDescGZIP(), []int{39}
}

func (x *GetFileResponse) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

type FileExistsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Auth          *v1.AuthInfo           `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"` // 认证信息
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileExistsRequest) Reset() {
	*x = FileExistsRequest{}
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileExistsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileExistsRequest) ProtoMessage() {}

func (x *FileExistsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileExistsRequest.ProtoReflect.Descriptor instead.
func (*FileExistsRequest) Descriptor() ([]byte, []int) {
	return file_proto_cloud_drive_file_v1_file_proto_rawDescGZIP(), []int{40}
}

func (x *FileExistsRequest) GetAuth() *v1.AuthInfo {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *FileExistsRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type FileExistsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Exists        bool                   `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileExistsResponse) Reset() {
	*x = FileExistsResponse{}
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileExistsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileExistsResponse) ProtoMessage() {}

func (x *FileExistsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cloud_drive_file_v1_file_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileExistsResponse.ProtoReflect.Descriptor instead.
func (*FileExistsResponse) Descriptor() ([]byte, []int) {
	return file_proto_cloud_drive_file_v1_file_proto_rawDescGZIP(), []int{41}
}

func (x *FileExistsResponse) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

var File_proto_cloud_drive_file_v1_file_proto protoreflect.FileDescriptor

var file_proto_cloud_drive_file_v1_file_proto_rawDesc = []byte{
	0x0a, 0x24, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x69, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76,
	0x31, 0x1a, 0x28, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x64,
	0x72, 0x69, 0x76, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x62, 0x0a, 0x11,
	0x46, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x39, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x22, 0x49, 0x0a, 0x09, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x52, 0x0a, 0x12, 0x46,
	0x69, 0x6c, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3c, 0x0a, 0x06, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x06, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x22,
	0x83, 0x01, 0x0a, 0x1c, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x44, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x39, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x64, 0x72, 0x69,
	0x76, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12,
	0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x6f, 0x0a, 0x1d, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x75,
	0x6e, 0x6b, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x61, 0x73, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0xb4, 0x02, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x49, 0x0a,
	0x09, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x67, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x39, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x64,
	0x72, 0x69, 0x76, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x22, 0x4e, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x04,
	0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x66,
	0x69, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x66, 0x69, 0x6c,
	0x65, 0x22, 0x61, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x22, 0x4a, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x05, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x66, 0x69, 0x6c,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x22, 0x62, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x22, 0x14, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x54, 0x0a, 0x17, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68,
	0x22, 0x51, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x46,
	0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x05,
	0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e,
	0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x22, 0x63, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x46, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x61, 0x75, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x15, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x6d, 0x0a, 0x1c, 0x50, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x39, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x64, 0x72, 0x69, 0x76,
	0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x1f,
	0x0a, 0x1d, 0x50, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x9b, 0x01, 0x0a, 0x11, 0x49, 0x6e, 0x69, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x61, 0x76, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x61, 0x76, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x22, 0x89, 0x01,
	0x0a, 0x12, 0x49, 0x6e, 0x69, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x75,
	0x6e, 0x6b, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63,
	0x68, 0x75, 0x6e, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x68, 0x75, 0x6e,
	0x6b, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63,
	0x68, 0x75, 0x6e, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xaa, 0x01, 0x0a, 0x0f, 0x4d, 0x6f,
	0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a,
	0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x76,
	0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6f, 0x76,
	0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x22, 0x47, 0x0a, 0x10, 0x4d, 0x6f, 0x76, 0x65, 0x46, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x66, 0x69,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x66, 0x69, 0x6c,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x22,
	0xaa, 0x01, 0x0a, 0x0f, 0x43, 0x6f, 0x70, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x22, 0x47, 0x0a, 0x10,
	0x43, 0x6f, 0x70, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x33, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x64, 0x72, 0x69,
	0x76, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x04, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x99, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x04, 0x61,
	0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65,
	0x77, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65,
	0x77, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,
	0x65, 0x22, 0x49, 0x0a, 0x12, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x22, 0xbb, 0x01, 0x0a,
	0x15, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x6f, 0x72, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x6f, 0x0a, 0x16, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xda, 0x01, 0x0a, 0x0e,
	0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x41, 0x74, 0x22, 0xaa, 0x01, 0x0a, 0x1c, 0x52, 0x65, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x42,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x61, 0x75, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x76, 0x65, 0x72,
	0x72, 0x69, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6f, 0x76, 0x65, 0x72,
	0x72, 0x69, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x50, 0x61, 0x74, 0x68, 0x22, 0x54, 0x0a, 0x1d, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x46, 0x72, 0x6f, 0x6d, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x6c, 0x0a, 0x1b, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65,
	0x42, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x04, 0x61, 0x75,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x1e, 0x0a, 0x1c, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x42, 0x69,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x53, 0x0a, 0x16, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x22, 0x3e,
	0x0a, 0x17, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x42, 0x69,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xb8,
	0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x40, 0x0a, 0x06, 0x68, 0x61, 0x73, 0x68, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x48, 0x61, 0x73,
	0x68, 0x52, 0x06, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x22, 0x49, 0x0a, 0x12, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x33, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x64, 0x72, 0x69, 0x76,
	0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04,
	0x66, 0x69, 0x6c, 0x65, 0x22, 0x5f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x46, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x62, 0x0a,
	0x11, 0x46, 0x69, 0x6c, 0x65, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x39, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x64,
	0x72, 0x69, 0x76, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x22, 0x2c, 0x0a, 0x12, 0x46, 0x69, 0x6c, 0x65, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x69, 0x73, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x32,
	0xea, 0x0e, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x7a, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x12, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x09, 0x4c,
	0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x66, 0x69, 0x6c,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46,
	0x69, 0x6c, 0x65, 0x12, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x6b, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x12, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x64,
	0x72, 0x69, 0x76, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x64, 0x72, 0x69,
	0x76, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x62, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x29, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x66,
	0x69, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x73, 0x12, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x7d, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x46,
	0x69, 0x6c, 0x65, 0x73, 0x12, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x66, 0x69, 0x6c,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x6e, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x2d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x64, 0x72, 0x69,
	0x76, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x64, 0x72, 0x69, 0x76,
	0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x8c, 0x01, 0x0a, 0x15, 0x50, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x37, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x66, 0x69,
	0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x65, 0x6e, 0x74, 0x6c,
	0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x38, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x65, 0x72, 0x6d, 0x61, 0x6e, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x65,
	0x0a, 0x08, 0x4d, 0x6f, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x2a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x66,
	0x69, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x08, 0x43, 0x6f, 0x70, 0x79, 0x46, 0x69, 0x6c,
	0x65, 0x12, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x70, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x64, 0x72, 0x69, 0x76,
	0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x70, 0x79, 0x46, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x12, 0x2c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x64, 0x72, 0x69, 0x76,
	0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x68,
	0x75, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e,
	0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x75, 0x6e,
	0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x77, 0x0a, 0x0e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x12, 0x30,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x64, 0x72, 0x69,
	0x76, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x64,
	0x72, 0x69, 0x76, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8c, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x12,
	0x37, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x42, 0x69,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x66, 0x69, 0x6c,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x46, 0x72, 0x6f, 0x6d,
	0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x89, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46,
	0x72, 0x6f, 0x6d, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x12, 0x36, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x64, 0x72, 0x69, 0x76,
	0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x46, 0x72, 0x6f, 0x6d, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x65, 0x63, 0x79,
	0x63, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x7a, 0x0a, 0x0f, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65,
	0x42, 0x69, 0x6e, 0x12, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x42,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x49, 0x5a, 0x47,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x45, 0x64, 0x67, 0x65, 0x53,
	0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2f,
	0x66, 0x69, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_cloud_drive_file_v1_file_proto_rawDescOnce sync.Once
	file_proto_cloud_drive_file_v1_file_proto_rawDescData = file_proto_cloud_drive_file_v1_file_proto_rawDesc
)

func file_proto_cloud_drive_file_v1_file_proto_rawDescGZIP() []byte {
	file_proto_cloud_drive_file_v1_file_proto_rawDescOnce.Do(func() {
		file_proto_cloud_drive_file_v1_file_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_cloud_drive_file_v1_file_proto_rawDescData)
	})
	return file_proto_cloud_drive_file_v1_file_proto_rawDescData
}

var file_proto_cloud_drive_file_v1_file_proto_msgTypes = make([]protoimpl.MessageInfo, 42)
var file_proto_cloud_drive_file_v1_file_proto_goTypes = []any{
	(*FileChunksRequest)(nil),             // 0: proto.cloud_drive.file.v1.FileChunksRequest
	(*FileChunk)(nil),                     // 1: proto.cloud_drive.file.v1.FileChunk
	(*FileChunksResponse)(nil),            // 2: proto.cloud_drive.file.v1.FileChunksResponse
	(*FileChunkDownloadLinkRequest)(nil),  // 3: proto.cloud_drive.file.v1.FileChunkDownloadLinkRequest
	(*FileChunkDownloadLinkResponse)(nil), // 4: proto.cloud_drive.file.v1.FileChunkDownloadLinkResponse
	(*File)(nil),                          // 5: proto.cloud_drive.file.v1.File
	(*ChunkInfo)(nil),                     // 6: proto.cloud_drive.file.v1.ChunkInfo
	(*CreateDirectoryRequest)(nil),        // 7: proto.cloud_drive.file.v1.CreateDirectoryRequest
	(*CreateDirectoryResponse)(nil),       // 8: proto.cloud_drive.file.v1.CreateDirectoryResponse
	(*ListFilesRequest)(nil),              // 9: proto.cloud_drive.file.v1.ListFilesRequest
	(*ListFilesResponse)(nil),             // 10: proto.cloud_drive.file.v1.ListFilesResponse
	(*DeleteFileRequest)(nil),             // 11: proto.cloud_drive.file.v1.DeleteFileRequest
	(*DeleteFileResponse)(nil),            // 12: proto.cloud_drive.file.v1.DeleteFileResponse
	(*ListDeletedFilesRequest)(nil),       // 13: proto.cloud_drive.file.v1.ListDeletedFilesRequest
	(*ListDeletedFilesResponse)(nil),      // 14: proto.cloud_drive.file.v1.ListDeletedFilesResponse
	(*RestoreFileRequest)(nil),            // 15: proto.cloud_drive.file.v1.RestoreFileRequest
	(*RestoreFileResponse)(nil),           // 16: proto.cloud_drive.file.v1.RestoreFileResponse
	(*PermanentlyDeleteFileRequest)(nil),  // 17: proto.cloud_drive.file.v1.PermanentlyDeleteFileRequest
	(*PermanentlyDeleteFileResponse)(nil), // 18: proto.cloud_drive.file.v1.PermanentlyDeleteFileResponse
	(*InitUploadRequest)(nil),             // 19: proto.cloud_drive.file.v1.InitUploadRequest
	(*InitUploadResponse)(nil),            // 20: proto.cloud_drive.file.v1.InitUploadResponse
	(*MoveFileRequest)(nil),               // 21: proto.cloud_drive.file.v1.MoveFileRequest
	(*MoveFileResponse)(nil),              // 22: proto.cloud_drive.file.v1.MoveFileResponse
	(*CopyFileRequest)(nil),               // 23: proto.cloud_drive.file.v1.CopyFileRequest
	(*CopyFileResponse)(nil),              // 24: proto.cloud_drive.file.v1.CopyFileResponse
	(*RenameFileRequest)(nil),             // 25: proto.cloud_drive.file.v1.RenameFileRequest
	(*RenameFileResponse)(nil),            // 26: proto.cloud_drive.file.v1.RenameFileResponse
	(*ListRecycleBinRequest)(nil),         // 27: proto.cloud_drive.file.v1.ListRecycleBinRequest
	(*ListRecycleBinResponse)(nil),        // 28: proto.cloud_drive.file.v1.ListRecycleBinResponse
	(*RecycleBinItem)(nil),                // 29: proto.cloud_drive.file.v1.RecycleBinItem
	(*RestoreFromRecycleBinRequest)(nil),  // 30: proto.cloud_drive.file.v1.RestoreFromRecycleBinRequest
	(*RestoreFromRecycleBinResponse)(nil), // 31: proto.cloud_drive.file.v1.RestoreFromRecycleBinResponse
	(*DeleteFromRecycleBinRequest)(nil),   // 32: proto.cloud_drive.file.v1.DeleteFromRecycleBinRequest
	(*DeleteFromRecycleBinResponse)(nil),  // 33: proto.cloud_drive.file.v1.DeleteFromRecycleBinResponse
	(*EmptyRecycleBinRequest)(nil),        // 34: proto.cloud_drive.file.v1.EmptyRecycleBinRequest
	(*EmptyRecycleBinResponse)(nil),       // 35: proto.cloud_drive.file.v1.EmptyRecycleBinResponse
	(*CreateFileRequest)(nil),             // 36: proto.cloud_drive.file.v1.CreateFileRequest
	(*CreateFileResponse)(nil),            // 37: proto.cloud_drive.file.v1.CreateFileResponse
	(*GetFileRequest)(nil),                // 38: proto.cloud_drive.file.v1.GetFileRequest
	(*GetFileResponse)(nil),               // 39: proto.cloud_drive.file.v1.GetFileResponse
	(*FileExistsRequest)(nil),             // 40: proto.cloud_drive.file.v1.FileExistsRequest
	(*FileExistsResponse)(nil),            // 41: proto.cloud_drive.file.v1.FileExistsResponse
	(*v1.AuthInfo)(nil),                   // 42: proto.cloud_drive.common.v1.AuthInfo
	(*timestamppb.Timestamp)(nil),         // 43: google.protobuf.Timestamp
	(*v1.OrderedHash)(nil),                // 44: proto.cloud_drive.common.v1.OrderedHash
}
var file_proto_cloud_drive_file_v1_file_proto_depIdxs = []int32{
	42, // 0: proto.cloud_drive.file.v1.FileChunksRequest.auth:type_name -> proto.cloud_drive.common.v1.AuthInfo
	1,  // 1: proto.cloud_drive.file.v1.FileChunksResponse.chunks:type_name -> proto.cloud_drive.file.v1.FileChunk
	42, // 2: proto.cloud_drive.file.v1.FileChunkDownloadLinkRequest.auth:type_name -> proto.cloud_drive.common.v1.AuthInfo
	43, // 3: proto.cloud_drive.file.v1.File.created_at:type_name -> google.protobuf.Timestamp
	43, // 4: proto.cloud_drive.file.v1.File.updated_at:type_name -> google.protobuf.Timestamp
	43, // 5: proto.cloud_drive.file.v1.File.deleted_at:type_name -> google.protobuf.Timestamp
	42, // 6: proto.cloud_drive.file.v1.CreateDirectoryRequest.auth:type_name -> proto.cloud_drive.common.v1.AuthInfo
	5,  // 7: proto.cloud_drive.file.v1.CreateDirectoryResponse.file:type_name -> proto.cloud_drive.file.v1.File
	42, // 8: proto.cloud_drive.file.v1.ListFilesRequest.auth:type_name -> proto.cloud_drive.common.v1.AuthInfo
	5,  // 9: proto.cloud_drive.file.v1.ListFilesResponse.files:type_name -> proto.cloud_drive.file.v1.File
	42, // 10: proto.cloud_drive.file.v1.DeleteFileRequest.auth:type_name -> proto.cloud_drive.common.v1.AuthInfo
	42, // 11: proto.cloud_drive.file.v1.ListDeletedFilesRequest.auth:type_name -> proto.cloud_drive.common.v1.AuthInfo
	5,  // 12: proto.cloud_drive.file.v1.ListDeletedFilesResponse.files:type_name -> proto.cloud_drive.file.v1.File
	42, // 13: proto.cloud_drive.file.v1.RestoreFileRequest.auth:type_name -> proto.cloud_drive.common.v1.AuthInfo
	42, // 14: proto.cloud_drive.file.v1.PermanentlyDeleteFileRequest.auth:type_name -> proto.cloud_drive.common.v1.AuthInfo
	42, // 15: proto.cloud_drive.file.v1.InitUploadRequest.auth:type_name -> proto.cloud_drive.common.v1.AuthInfo
	5,  // 16: proto.cloud_drive.file.v1.InitUploadResponse.file:type_name -> proto.cloud_drive.file.v1.File
	42, // 17: proto.cloud_drive.file.v1.MoveFileRequest.auth:type_name -> proto.cloud_drive.common.v1.AuthInfo
	5,  // 18: proto.cloud_drive.file.v1.MoveFileResponse.file:type_name -> proto.cloud_drive.file.v1.File
	42, // 19: proto.cloud_drive.file.v1.CopyFileRequest.auth:type_name -> proto.cloud_drive.common.v1.AuthInfo
	5,  // 20: proto.cloud_drive.file.v1.CopyFileResponse.file:type_name -> proto.cloud_drive.file.v1.File
	42, // 21: proto.cloud_drive.file.v1.RenameFileRequest.auth:type_name -> proto.cloud_drive.common.v1.AuthInfo
	5,  // 22: proto.cloud_drive.file.v1.RenameFileResponse.file:type_name -> proto.cloud_drive.file.v1.File
	42, // 23: proto.cloud_drive.file.v1.ListRecycleBinRequest.auth:type_name -> proto.cloud_drive.common.v1.AuthInfo
	29, // 24: proto.cloud_drive.file.v1.ListRecycleBinResponse.items:type_name -> proto.cloud_drive.file.v1.RecycleBinItem
	42, // 25: proto.cloud_drive.file.v1.RestoreFromRecycleBinRequest.auth:type_name -> proto.cloud_drive.common.v1.AuthInfo
	5,  // 26: proto.cloud_drive.file.v1.RestoreFromRecycleBinResponse.file:type_name -> proto.cloud_drive.file.v1.File
	42, // 27: proto.cloud_drive.file.v1.DeleteFromRecycleBinRequest.auth:type_name -> proto.cloud_drive.common.v1.AuthInfo
	42, // 28: proto.cloud_drive.file.v1.EmptyRecycleBinRequest.auth:type_name -> proto.cloud_drive.common.v1.AuthInfo
	42, // 29: proto.cloud_drive.file.v1.CreateFileRequest.auth:type_name -> proto.cloud_drive.common.v1.AuthInfo
	44, // 30: proto.cloud_drive.file.v1.CreateFileRequest.hashes:type_name -> proto.cloud_drive.common.v1.OrderedHash
	5,  // 31: proto.cloud_drive.file.v1.CreateFileResponse.file:type_name -> proto.cloud_drive.file.v1.File
	42, // 32: proto.cloud_drive.file.v1.GetFileRequest.auth:type_name -> proto.cloud_drive.common.v1.AuthInfo
	5,  // 33: proto.cloud_drive.file.v1.GetFileResponse.file:type_name -> proto.cloud_drive.file.v1.File
	42, // 34: proto.cloud_drive.file.v1.FileExistsRequest.auth:type_name -> proto.cloud_drive.common.v1.AuthInfo
	7,  // 35: proto.cloud_drive.file.v1.FileService.CreateDirectory:input_type -> proto.cloud_drive.file.v1.CreateDirectoryRequest
	9,  // 36: proto.cloud_drive.file.v1.FileService.ListFiles:input_type -> proto.cloud_drive.file.v1.ListFilesRequest
	11, // 37: proto.cloud_drive.file.v1.FileService.DeleteFile:input_type -> proto.cloud_drive.file.v1.DeleteFileRequest
	36, // 38: proto.cloud_drive.file.v1.FileService.CreateFile:input_type -> proto.cloud_drive.file.v1.CreateFileRequest
	38, // 39: proto.cloud_drive.file.v1.FileService.GetFile:input_type -> proto.cloud_drive.file.v1.GetFileRequest
	40, // 40: proto.cloud_drive.file.v1.FileService.FileExists:input_type -> proto.cloud_drive.file.v1.FileExistsRequest
	13, // 41: proto.cloud_drive.file.v1.FileService.ListDeletedFiles:input_type -> proto.cloud_drive.file.v1.ListDeletedFilesRequest
	15, // 42: proto.cloud_drive.file.v1.FileService.RestoreFile:input_type -> proto.cloud_drive.file.v1.RestoreFileRequest
	17, // 43: proto.cloud_drive.file.v1.FileService.PermanentlyDeleteFile:input_type -> proto.cloud_drive.file.v1.PermanentlyDeleteFileRequest
	21, // 44: proto.cloud_drive.file.v1.FileService.MoveFile:input_type -> proto.cloud_drive.file.v1.MoveFileRequest
	23, // 45: proto.cloud_drive.file.v1.FileService.CopyFile:input_type -> proto.cloud_drive.file.v1.CopyFileRequest
	0,  // 46: proto.cloud_drive.file.v1.FileService.GetFileChunks:input_type -> proto.cloud_drive.file.v1.FileChunksRequest
	27, // 47: proto.cloud_drive.file.v1.FileService.ListRecycleBin:input_type -> proto.cloud_drive.file.v1.ListRecycleBinRequest
	30, // 48: proto.cloud_drive.file.v1.FileService.RestoreFromRecycleBin:input_type -> proto.cloud_drive.file.v1.RestoreFromRecycleBinRequest
	32, // 49: proto.cloud_drive.file.v1.FileService.DeleteFromRecycleBin:input_type -> proto.cloud_drive.file.v1.DeleteFromRecycleBinRequest
	34, // 50: proto.cloud_drive.file.v1.FileService.EmptyRecycleBin:input_type -> proto.cloud_drive.file.v1.EmptyRecycleBinRequest
	8,  // 51: proto.cloud_drive.file.v1.FileService.CreateDirectory:output_type -> proto.cloud_drive.file.v1.CreateDirectoryResponse
	10, // 52: proto.cloud_drive.file.v1.FileService.ListFiles:output_type -> proto.cloud_drive.file.v1.ListFilesResponse
	12, // 53: proto.cloud_drive.file.v1.FileService.DeleteFile:output_type -> proto.cloud_drive.file.v1.DeleteFileResponse
	37, // 54: proto.cloud_drive.file.v1.FileService.CreateFile:output_type -> proto.cloud_drive.file.v1.CreateFileResponse
	39, // 55: proto.cloud_drive.file.v1.FileService.GetFile:output_type -> proto.cloud_drive.file.v1.GetFileResponse
	41, // 56: proto.cloud_drive.file.v1.FileService.FileExists:output_type -> proto.cloud_drive.file.v1.FileExistsResponse
	14, // 57: proto.cloud_drive.file.v1.FileService.ListDeletedFiles:output_type -> proto.cloud_drive.file.v1.ListDeletedFilesResponse
	16, // 58: proto.cloud_drive.file.v1.FileService.RestoreFile:output_type -> proto.cloud_drive.file.v1.RestoreFileResponse
	18, // 59: proto.cloud_drive.file.v1.FileService.PermanentlyDeleteFile:output_type -> proto.cloud_drive.file.v1.PermanentlyDeleteFileResponse
	22, // 60: proto.cloud_drive.file.v1.FileService.MoveFile:output_type -> proto.cloud_drive.file.v1.MoveFileResponse
	24, // 61: proto.cloud_drive.file.v1.FileService.CopyFile:output_type -> proto.cloud_drive.file.v1.CopyFileResponse
	2,  // 62: proto.cloud_drive.file.v1.FileService.GetFileChunks:output_type -> proto.cloud_drive.file.v1.FileChunksResponse
	28, // 63: proto.cloud_drive.file.v1.FileService.ListRecycleBin:output_type -> proto.cloud_drive.file.v1.ListRecycleBinResponse
	31, // 64: proto.cloud_drive.file.v1.FileService.RestoreFromRecycleBin:output_type -> proto.cloud_drive.file.v1.RestoreFromRecycleBinResponse
	33, // 65: proto.cloud_drive.file.v1.FileService.DeleteFromRecycleBin:output_type -> proto.cloud_drive.file.v1.DeleteFromRecycleBinResponse
	35, // 66: proto.cloud_drive.file.v1.FileService.EmptyRecycleBin:output_type -> proto.cloud_drive.file.v1.EmptyRecycleBinResponse
	51, // [51:67] is the sub-list for method output_type
	35, // [35:51] is the sub-list for method input_type
	35, // [35:35] is the sub-list for extension type_name
	35, // [35:35] is the sub-list for extension extendee
	0,  // [0:35] is the sub-list for field type_name
}

func init() { file_proto_cloud_drive_file_v1_file_proto_init() }
func file_proto_cloud_drive_file_v1_file_proto_init() {
	if File_proto_cloud_drive_file_v1_file_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_cloud_drive_file_v1_file_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   42,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_cloud_drive_file_v1_file_proto_goTypes,
		DependencyIndexes: file_proto_cloud_drive_file_v1_file_proto_depIdxs,
		MessageInfos:      file_proto_cloud_drive_file_v1_file_proto_msgTypes,
	}.Build()
	File_proto_cloud_drive_file_v1_file_proto = out.File
	file_proto_cloud_drive_file_v1_file_proto_rawDesc = nil
	file_proto_cloud_drive_file_v1_file_proto_goTypes = nil
	file_proto_cloud_drive_file_v1_file_proto_depIdxs = nil
}
